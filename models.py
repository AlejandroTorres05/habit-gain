import sqlite3
from typing import List, Optional, Dict

class Database:
    def __init__(self, db_name: str = 'habitgain.db'):
        self.db_name = db_name
        self.init_db()
    
    def get_connection(self):
        conn = sqlite3.connect(self.db_name)
        conn.row_factory = sqlite3.Row
        return conn
    
    def init_db(self):
        conn = self.get_connection()
        cursor = conn.cursor()
        
        # Tabla de categor√≠as
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS categorias (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                nombre TEXT NOT NULL UNIQUE,
                icono TEXT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
            )
        ''')
        
        # Tabla de h√°bitos
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS habitos (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                nombre TEXT NOT NULL,
                descripcion_breve TEXT NOT NULL,
                descripcion_completa TEXT NOT NULL,
                por_que_funciona TEXT NOT NULL,
                categoria_id INTEGER NOT NULL,
                icono TEXT NOT NULL,
                frecuencia TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (categoria_id) REFERENCES categorias (id)
            )
        ''')
        
        conn.commit()
        conn.close()
    
    def seed_data(self):
        """Insertar datos iniciales hardcodeados"""
        conn = self.get_connection()
        cursor = conn.cursor()
        
        # Verificar si ya hay datos
        cursor.execute('SELECT COUNT(*) as count FROM categorias')
        if cursor.fetchone()['count'] > 0:
            conn.close()
            return
        
        # Insertar categor√≠as
        categorias = [
            ('Bienestar', 'üçÉ'),
            ('Salud F√≠sica', 'üí™'),
            ('Productividad', '‚ö°'),
            ('Mindfulness', 'üßò')
        ]
        
        cursor.executemany('INSERT INTO categorias (nombre, icono) VALUES (?, ?)', categorias)
        
        # Insertar h√°bitos
        habitos = [
            # Bienestar (categoria_id = 1)
            (
                'Meditaci√≥n Diaria',
                'Diaria',
                'Encuentra calma y reduce estr√©s dedicando tan solo unos minutos al d√≠a.',
                'Mejora tu enfoque, claridad mental y estabilidad emocional a largo plazo mediante la pr√°ctica diaria de meditaci√≥n. Estudios demuestran que solo 10 minutos al d√≠a pueden reducir significativamente los niveles de cortisol (hormona del estr√©s).',
                'Basado en ciencia de atenci√≥n plena, reestructura el cerebro (neuroplasticidad) para mejorar regulaci√≥n y concentraci√≥n.',
                1,
                'üßò‚Äç‚ôÄÔ∏è'
            ),
            (
                'Gratitud Nocturna',
                'Diaria',
                'Anota 3 cosas por las que est√°s agradecido antes de dormir.',
                'La pr√°ctica de gratitud nocturna reprograma tu cerebro para enfocarse en aspectos positivos de tu vida. Escribir tres cosas por las que est√°s agradecido cada noche mejora la calidad del sue√±o, reduce la ansiedad y aumenta la sensaci√≥n de bienestar general.',
                'La psicolog√≠a positiva demuestra que la gratitud activa el sistema de recompensa del cerebro, liberando dopamina y serotonina, mejorando el estado de √°nimo.',
                1,
                'üìù'
            ),
            (
                'Respiraci√≥n Consciente',
                'Diaria',
                'Practica 5 minutos de respiraci√≥n profunda para calmar tu mente.',
                'La respiraci√≥n consciente es una t√©cnica simple pero poderosa que activa el sistema nervioso parasimp√°tico, reduciendo inmediatamente el estr√©s y la ansiedad. Solo 5 minutos al d√≠a pueden mejorar tu claridad mental y regulaci√≥n emocional.',
                'La respiraci√≥n profunda reduce la frecuencia card√≠aca y presi√≥n arterial, activando la respuesta de relajaci√≥n del cuerpo.',
                1,
                'üå¨Ô∏è'
            ),
            
            # Salud F√≠sica (categoria_id = 2)
            (
                'Caminata de 10 min',
                'Diaria',
                'Da una caminata breve para activar tu cuerpo y mente.',
                'Una caminata de 10 minutos es suficiente para activar tu circulaci√≥n, mejorar tu estado de √°nimo y aumentar tu energ√≠a. No necesitas equipo especial ni mucho tiempo, solo salir y moverte. Ideal para romper el sedentarismo y despejar la mente.',
                'El ejercicio aer√≥bico ligero libera endorfinas (hormonas de la felicidad) y mejora la funci√≥n cardiovascular, incluso en sesiones cortas.',
                2,
                'üö∂'
            ),
            (
                'Beber Agua (8 vasos)',
                '8 vasos',
                'Mant√©n tu cuerpo hidratado bebiendo agua regularmente.',
                'La hidrataci√≥n adecuada es fundamental para el funcionamiento √≥ptimo de tu cuerpo y mente. Beber 8 vasos de agua al d√≠a mejora la concentraci√≥n, energ√≠a, digesti√≥n y salud de la piel. Establece recordatorios para crear este h√°bito.',
                'El agua representa el 60% del cuerpo humano y es esencial para todas las funciones celulares, desde el transporte de nutrientes hasta la regulaci√≥n de temperatura.',
                2,
                'üíß'
            ),
            (
                'Estiramientos Matutinos',
                'Ma√±anera',
                'Despierta tu cuerpo con 5 minutos de estiramientos.',
                'Comenzar el d√≠a con estiramientos suaves activa tu circulaci√≥n, mejora tu flexibilidad y prepara tu cuerpo para el d√≠a. Reduce la rigidez muscular, previene lesiones y te ayuda a sentirte m√°s despierto y energizado.',
                'Los estiramientos aumentan el flujo sangu√≠neo a los m√∫sculos, mejorando la oxigenaci√≥n y reduciendo la tensi√≥n acumulada durante el sue√±o.',
                2,
                'ü§∏'
            ),
            
            # Productividad (categoria_id = 3)
            (
                'T√©cnica Pomodoro',
                'Diaria',
                'Trabaja en bloques de 25 minutos con descansos de 5 minutos.',
                'La T√©cnica Pomodoro te ayuda a mantener el foco y evitar el agotamiento mental. Trabajar en intervalos de 25 minutos seguidos de descansos cortos mejora tu productividad, reduce la procrastinaci√≥n y mantiene tu mente fresca durante todo el d√≠a.',
                'Basado en el funcionamiento de la atenci√≥n humana, que se mantiene √≥ptima en per√≠odos cortos. Los descansos previenen la fatiga cognitiva.',
                3,
                '‚è≤Ô∏è'
            ),
            (
                'Planificaci√≥n Diaria',
                'Ma√±anera',
                'Define tus 3 prioridades del d√≠a cada ma√±ana.',
                'Identificar tus 3 tareas m√°s importantes cada ma√±ana te ayuda a enfocarte en lo que realmente importa. Esta pr√°ctica reduce la sensaci√≥n de estar abrumado, aumenta tu efectividad y te da una sensaci√≥n de logro al final del d√≠a.',
                'El cerebro funciona mejor con objetivos claros y limitados. Priorizar reduce la carga cognitiva y mejora la toma de decisiones.',
                3,
                'üìã'
            ),
            (
                'Desconexi√≥n Digital',
                'Nocturna',
                'Apaga dispositivos 1 hora antes de dormir.',
                'Desconectarte de pantallas una hora antes de dormir mejora significativamente la calidad de tu sue√±o. La luz azul de los dispositivos suprime la melatonina, dificultando el descanso. Este h√°bito te ayudar√° a dormir mejor y despertar m√°s renovado.',
                'La luz azul inhibe la producci√≥n de melatonina, la hormona del sue√±o. Eliminar esta exposici√≥n mejora los ciclos circadianos naturales.',
                3,
                'üìµ'
            ),
            
            # Mindfulness (categoria_id = 4)
            (
                'Escaneo Corporal',
                'Diaria',
                'Dedica 5 minutos a escanear sensaciones en tu cuerpo.',
                'El escaneo corporal es una pr√°ctica de mindfulness que te ayuda a conectar con tu cuerpo y detectar tensiones o incomodidades. Esta t√©cnica reduce el estr√©s, mejora la conciencia corporal y te ayuda a relajarte profundamente.',
                'La pr√°ctica de body scan activa la interocepci√≥n (conciencia de sensaciones internas), reduciendo la respuesta de estr√©s y mejorando la regulaci√≥n emocional.',
                4,
                'üßò'
            ),
            (
                'Comida Consciente',
                'Diaria',
                'Come al menos una comida sin distracciones, enfoc√°ndote en sabores.',
                'Comer conscientemente mejora tu relaci√≥n con la comida, ayuda a la digesti√≥n y te permite disfrutar m√°s de tus alimentos. Eliminar distracciones durante las comidas te ayuda a reconocer se√±ales de saciedad y prevenir el comer en exceso.',
                'El mindful eating mejora la digesti√≥n y el reconocimiento de se√±ales de hambre/saciedad, reduciendo patrones de alimentaci√≥n emocional.',
                4,
                'üçΩÔ∏è'
            ),
            (
                'Observaci√≥n de Pensamientos',
                'Diaria',
                'Observa tus pensamientos sin juzgarlos durante 5 minutos.',
                'Esta pr√°ctica de mindfulness te ayuda a tomar distancia de tus pensamientos y emociones, reconociendo que no eres tus pensamientos. Mejora la claridad mental, reduce la rumiaci√≥n y aumenta tu capacidad de responder (no reaccionar) ante situaciones dif√≠ciles.',
                'La metacognici√≥n (pensar sobre el pensamiento) permite desidentificarse de patrones mentales negativos, reduciendo ansiedad y depresi√≥n.',
                4,
                'üí≠'
            )
        ]
        
        cursor.executemany('''
            INSERT INTO habitos 
            (nombre, frecuencia, descripcion_breve, descripcion_completa, por_que_funciona, categoria_id, icono) 
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', habitos)
        
        conn.commit()
        conn.close()


class Categoria:
    @staticmethod
    def get_all() -> List[Dict]:
        db = Database()
        conn = db.get_connection()
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM categorias ORDER BY nombre')
        categorias = [dict(row) for row in cursor.fetchall()]
        conn.close()
        return categorias
    
    @staticmethod
    def get_by_id(categoria_id: int) -> Optional[Dict]:
        db = Database()
        conn = db.get_connection()
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM categorias WHERE id = ?', (categoria_id,))
        categoria = cursor.fetchone()
        conn.close()
        return dict(categoria) if categoria else None


class Habito:
    @staticmethod
    def get_all() -> List[Dict]:
        db = Database()
        conn = db.get_connection()
        cursor = conn.cursor()
        cursor.execute('''
            SELECT h.*, c.nombre as categoria_nombre, c.icono as categoria_icono
            FROM habitos h
            JOIN categorias c ON h.categoria_id = c.id
            ORDER BY h.nombre
        ''')
        habitos = [dict(row) for row in cursor.fetchall()]
        conn.close()
        return habitos
    
    @staticmethod
    def get_by_id(habito_id: int) -> Optional[Dict]:
        db = Database()
        conn = db.get_connection()
        cursor = conn.cursor()
        cursor.execute('''
            SELECT h.*, c.nombre as categoria_nombre, c.icono as categoria_icono
            FROM habitos h
            JOIN categorias c ON h.categoria_id = c.id
            WHERE h.id = ?
        ''', (habito_id,))
        habito = cursor.fetchone()
        conn.close()
        return dict(habito) if habito else None
    
    @staticmethod
    def get_by_categoria(categoria_id: int) -> List[Dict]:
        db = Database()
        conn = db.get_connection()
        cursor = conn.cursor()
        cursor.execute('''
            SELECT h.*, c.nombre as categoria_nombre, c.icono as categoria_icono
            FROM habitos h
            JOIN categorias c ON h.categoria_id = c.id
            WHERE h.categoria_id = ?
            ORDER BY h.nombre
        ''', (categoria_id,))
        habitos = [dict(row) for row in cursor.fetchall()]
        conn.close()
        return habitos
    
    @staticmethod
    def search(query: str) -> List[Dict]:
        db = Database()
        conn = db.get_connection()
        cursor = conn.cursor()
        search_term = f'%{query}%'
        cursor.execute('''
            SELECT h.*, c.nombre as categoria_nombre, c.icono as categoria_icono
            FROM habitos h
            JOIN categorias c ON h.categoria_id = c.id
            WHERE h.nombre LIKE ? OR h.descripcion_breve LIKE ?
            ORDER BY h.nombre
        ''', (search_term, search_term))
        habitos = [dict(row) for row in cursor.fetchall()]
        conn.close()
        return habitos