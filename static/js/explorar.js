// ============================================
// VARIABLES GLOBALES
// ============================================
let categoriaSeleccionada = null;
let todosLosHabitos = [];

// ============================================
// INICIALIZACI√ìN
// ============================================
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìö M√≥dulo de Exploraci√≥n - Inicializado');
    
    // Guardar todos los h√°bitos al cargar la p√°gina
    cargarHabitosIniciales();
    
    // Event listeners
    inicializarEventListeners();
});

/**
 * Carga los h√°bitos iniciales en memoria
 */
function cargarHabitosIniciales() {
    const habitCards = document.querySelectorAll('.habit-card');
    todosLosHabitos = Array.from(habitCards);
    console.log(`‚úÖ Cargados ${todosLosHabitos.length} h√°bitos`);
}

/**
 * Inicializa todos los event listeners
 */
function inicializarEventListeners() {
    // Categor√≠as
    const categoryCards = document.querySelectorAll('.category-card');
    categoryCards.forEach(card => {
        card.addEventListener('click', handleCategoriaClick);
    });
    
    // Tarjetas de h√°bitos
    const habitCards = document.querySelectorAll('.habit-card');
    habitCards.forEach(card => {
        card.addEventListener('click', handleHabitoClick);
    });
    
    // B√∫squeda
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.addEventListener('input', window.appUtils.debounce(handleBusqueda, 300));
    }
    
    console.log('‚úÖ Event listeners inicializados');
}

// ============================================
// MANEJO DE CATEGOR√çAS
// ============================================

/**
 * Maneja el click en una categor√≠a
 * @param {Event} event
 */
function handleCategoriaClick(event) {
    const card = event.currentTarget;
    const categoriaId = card.dataset.categoriaId;
    
    // Toggle de selecci√≥n
    const wasActive = card.classList.contains('active');
    
    // Remover active de todas las categor√≠as
    document.querySelectorAll('.category-card').forEach(c => {
        c.classList.remove('active');
    });
    
    if (wasActive) {
        // Si ya estaba activa, mostrar todos los h√°bitos
        categoriaSeleccionada = null;
        mostrarTodosLosHabitos();
        console.log('üìã Mostrando todos los h√°bitos');
    } else {
        // Activar la categor√≠a seleccionada
        card.classList.add('active');
        categoriaSeleccionada = categoriaId;
        filtrarHabitosPorCategoria(categoriaId);
        console.log(`üîç Filtrando por categor√≠a: ${categoriaId}`);
    }
    
    // Limpiar b√∫squeda
    document.getElementById('searchInput').value = '';
}

/**
 * Filtra h√°bitos por categor√≠a usando la API
 * @param {string} categoriaId - ID de la categor√≠a
 */
async function filtrarHabitosPorCategoria(categoriaId) {
    try {
        const response = await fetch(`/api/habitos/categoria/${categoriaId}`);
        
        if (!response.ok) {
            throw new Error('Error en la respuesta del servidor');
        }
        
        const habitos = await response.json();
        console.log(`‚úÖ Encontrados ${habitos.length} h√°bitos en la categor√≠a`);
        
        renderizarHabitos(habitos);
    } catch (error) {
        console.error('‚ùå Error al filtrar h√°bitos:', error);
        window.appUtils.showFeedback('Error al cargar h√°bitos', 'error');
    }
}

/**
 * Muestra todos los h√°bitos
 */
function mostrarTodosLosHabitos() {
    const habitsList = document.getElementById('habitsList');
    const noResults = document.getElementById('noResults');
    
    habitsList.innerHTML = '';
    
    todosLosHabitos.forEach(habit => {
        habitsList.appendChild(habit.cloneNode(true));
    });
    
    // Re-agregar event listeners a los clones
    const habitCards = habitsList.querySelectorAll('.habit-card');
    habitCards.forEach(card => {
        card.addEventListener('click', handleHabitoClick);
    });
    
    habitsList.style.display = 'flex';
    noResults.style.display = 'none';
}

// ============================================
// B√öSQUEDA
// ============================================

/**
 * Maneja la b√∫squeda de h√°bitos
 * @param {Event} event
 */
async function handleBusqueda(event) {
    const query = event.target.value.trim();
    
    console.log(`üîé Buscando: "${query}"`);
    
    // Si hay b√∫squeda, desactivar filtro de categor√≠a
    if (query) {
        document.querySelectorAll('.category-card').forEach(c => {
            c.classList.remove('active');
        });
        categoriaSeleccionada = null;
    }
    
    try {
        const response = await fetch(`/api/habitos/buscar?q=${encodeURIComponent(query)}`);
        
        if (!response.ok) {
            throw new Error('Error en la respuesta del servidor');
        }
        
        const habitos = await response.json();
        console.log(`‚úÖ Encontrados ${habitos.length} h√°bitos`);
        
        renderizarHabitos(habitos);
    } catch (error) {
        console.error('‚ùå Error en b√∫squeda:', error);
        window.appUtils.showFeedback('Error al buscar h√°bitos', 'error');
    }
}

// ============================================
// RENDERIZADO
// ============================================

/**
 * Renderiza la lista de h√°bitos
 * @param {Array} habitos - Array de objetos de h√°bitos
 */
function renderizarHabitos(habitos) {
    const habitsList = document.getElementById('habitsList');
    const noResults = document.getElementById('noResults');
    
    if (habitos.length === 0) {
        habitsList.style.display = 'none';
        noResults.style.display = 'block';
        console.log('‚ö†Ô∏è No se encontraron h√°bitos');
    } else {
        habitsList.style.display = 'flex';
        noResults.style.display = 'none';
        
        habitsList.innerHTML = '';
        
        habitos.forEach(habito => {
            const card = crearTarjetaHabito(habito);
            habitsList.appendChild(card);
        });
        
        console.log(`‚úÖ Renderizados ${habitos.length} h√°bitos`);
    }
}

/**
 * Crea una tarjeta de h√°bito
 * @param {Object} habito - Objeto con datos del h√°bito
 * @returns {HTMLElement}
 */
function crearTarjetaHabito(habito) {
    const card = document.createElement('div');
    card.className = 'habit-card';
    card.dataset.habitoId = habito.id;
    
    card.innerHTML = `
        <div class="habit-icon">${habito.icono}</div>
        <div class="habit-info">
            <div class="habit-name">${habito.nombre}</div>
            <div class="habit-frequency">${habito.frecuencia}</div>
        </div>
    `;
    
    card.addEventListener('click', handleHabitoClick);
    
    return card;
}

// ============================================
// NAVEGACI√ìN
// ============================================

/**
 * Maneja el click en una tarjeta de h√°bito
 * @param {Event} event
 */
function handleHabitoClick(event) {
    const card = event.currentTarget;
    const habitoId = card.dataset.habitoId;
    
    console.log(`‚û°Ô∏è Navegando a h√°bito: ${habitoId}`);
    
    // Navegar a la p√°gina de detalle
    window.location.href = `/habito/${habitoId}`;
}